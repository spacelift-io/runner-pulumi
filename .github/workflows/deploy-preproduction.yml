name: Deploy Preproduction

# on:
#   push:
#     tags:
#       - 'dev-v*.*.*'

on: [push]

jobs:
  base:
    runs-on: ubuntu-latest
    name: Build and deploy the base image
    strategy: { matrix: { base: [alpine, debian] } }
    steps:
      - name: Check out repository code
        uses: actions/checkout@master

      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=dev-v2.15.4" >> $GITHUB_ENV
        # run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set PULUMI_VERSION
        run: echo "PULUMI_VERSION=${RELEASE_VERSION#dev-}" >> $GITHUB_ENV

      - name: Install latest AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - name: Login to Amazon ECR
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${REPOSITORY_BASE_PATH}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
          REPOSITORY_BASE_PATH: ${{ secrets.PREPROD_REPOSITORY_BASE_PATH }}

      - name: Build the image
        run: cd base-${{ matrix.base }} && docker build --build-arg PULUMI_VERSION=${PULUMI_VERSION} --tag ${REPOSITORY_BASE_PATH}/runner-pulumi-base-${{ matrix.base }}:${RELEASE_VERSION} .
        env:
          REPOSITORY_BASE_PATH: ${{ secrets.PREPROD_REPOSITORY_BASE_PATH }}

      # - name: Push the image to ECR
      #   run: docker push ${REPOSITORY_BASE_PATH}/runner-pulumi-base-${{ matrix.base }}:${RELEASE_VERSION}
      #   env:
      #     REPOSITORY_BASE_PATH: ${{ secrets.PREPROD_REPOSITORY_BASE_PATH }}
  
  language:
    needs: [base]
    runs-on: ubuntu-latest
    name: Build and deploy the language image
    strategy: { matrix: { language: [javascript, golang, python, dotnet] } }
    steps:
      - name: Check out repository code
        uses: actions/checkout@master

      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=dev-v2.15.4" >> $GITHUB_ENV
        # run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set PULUMI_VERSION
        run: echo "PULUMI_VERSION=${RELEASE_VERSION#dev-}" >> $GITHUB_ENV

      - name: Install latest AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - name: Login to Amazon ECR
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${REPOSITORY_BASE_PATH}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
          REPOSITORY_BASE_PATH: ${{ secrets.PREPROD_REPOSITORY_BASE_PATH }}

      - name: Build the image
        run: cd ${{ matrix.language }} && docker build --build-arg REPOSITORY_BASE_PATH=${REPOSITORY_BASE_PATH} --build-arg RELEASE_VERSION=${RELEASE_VERSION} --tag ${REPOSITORY_BASE_PATH}/runner-pulumi-${{ matrix.language }}:${RELEASE_VERSION} .
        env:
          REPOSITORY_BASE_PATH: ${{ secrets.PREPROD_REPOSITORY_BASE_PATH }}

      # - name: Push the image to ECR
      #   run: docker push ${REPOSITORY_BASE_PATH}/runner-pulumi-${{ matrix.language }}:${RELEASE_VERSION}
      #   env:
      #     REPOSITORY_BASE_PATH: ${{ secrets.PREPROD_REPOSITORY_BASE_PATH }}

name: Deploy Production Latest

on:
  push:
    tags:
      - 'latest-v*.*.*'

jobs:
  base:
    runs-on: self-hosted
    container: docker
    name: Build and deploy the base image
    strategy: { matrix: { base: [alpine, debian] } }
    steps:
      - name: Check out repository code
        uses: actions/checkout@master

      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=latest" >> $GITHUB_ENV

      - name: Set PULUMI_VERSION
        run: echo "PULUMI_VERSION=${GITHUB_REF#refs/*/latest-}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.5.8
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-external-id: ${{ secrets.AWS_EXTERNAL_ID }}
          role-duration-seconds: 900

      - name: Install the latest AWS CLI
        run: |
          apk add --no-cache python3 py3-pip
          pip3 install --upgrade pip
          pip3 install awscli

      - name: Log in to Amazon public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ env.AWS_ACCESS_KEY_ID }}
          password: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push the image
        uses: docker/build-push-action@v2
        with:
          context: base-${{ matrix.base }}
          build-args: |
            PULUMI_VERSION=${{ env.PULUMI_VERSION }}
          tags: |
            ${{ secrets.REPOSITORY_BASE_PATH }}/runner-pulumi-base-${{ matrix.base }}:${{ env.RELEASE_VERSION }}

  language:
    needs: [base]
    runs-on: self-hosted
    container: docker
    name: Build and deploy the language image
    strategy: { matrix: { language: [javascript, golang, python, dotnet] } }
    steps:
      - name: Check out repository code
        uses: actions/checkout@master

      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=latest" >> $GITHUB_ENV

      - name: Set PULUMI_VERSION
        run: echo "PULUMI_VERSION=${GITHUB_REF#refs/*/latest-}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.5.8
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-external-id: ${{ secrets.AWS_EXTERNAL_ID }}
          role-duration-seconds: 900

      - name: Install the latest AWS CLI
        run: |
          apk add --no-cache python3 py3-pip
          pip3 install --upgrade pip
          pip3 install awscli

      - name: Log in to Amazon public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ env.AWS_ACCESS_KEY_ID }}
          password: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push the image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.language }}
          build-args: |
            PULUMI_VERSION=${{ env.PULUMI_VERSION }}
            REPOSITORY_BASE_PATH=${{ secrets.REPOSITORY_BASE_PATH }}
            RELEASE_VERSION=${{ env.RELEASE_VERSION }}
          tags: |
            ${{ secrets.REPOSITORY_BASE_PATH }}/runner-pulumi-${{ matrix.language }}:${{ env.RELEASE_VERSION }}
